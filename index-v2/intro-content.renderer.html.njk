{% import "common.html.njk" as common %}
{% from "nav-link.renderer.html.njk" import render_link %}

{% set nav_link_id_prefix = "intro-content-nav-link-" %}

{% macro render_intro_content(props) %}    
    <h1 class="flex justify-center pt-4 text-2xl italic">
        <p>Write Expressive and Interactive Web App with Ajax.</p>
    </h1>
    <section class="flex flex-col gap-2">
        <h2 class="text-xl font-bold">
            What {{ common.APP_NAME }} is about?
        </h2>
        <article class="text-lg">
            <ul class="pl-[3.5rem] flex flex-col gap-1 list-decimal">
                {% for term, item in _core_term_descriptions %}
                    <li>
                        {{ _make_capital_case(term) 
                            if item.should_make_capital_case_on_label
                            else _make_title_case(term) 
                        }}: {{ item.description | safe }}
                    </li>
                {% endfor %}
            </ul>
        </article>
    </section>
    <section class="flex flex-col gap-2">
        <h2 class="text-xl font-bold">
            What {{ common.APP_NAME }} is NOT?
        </h2>
        <article class="text-lg">
            <ul class="pl-[3.5rem] flex flex-col gap-1 list-decimal">
                {% for item in _not_descriptions %}
                    <li>{{ _make_not_sentence(item | safe) }}</li>
                {% endfor %}
            </ul>
        </article>
    </section>
    <section class="flex flex-col gap-2">
        <h2 class="text-xl font-bold">
            How do I start?
        </h2>
        <article class="text-lg indent-[2rem]">
            Check the 
                <p class="inline">{{ render_link(props, [nav_link_id_prefix, "guide"] | join("-"), "guide") }}</p>
            or 
                <p class="inline">{{ render_link(props, [nav_link_id_prefix, "example"] | join("-"), "example") }}</p>
            for more information.
        </article>
    </section>
        
{% endmacro %}

{% macro _make_capital_case(str) -%}
    <p 
        class="
{##}{##}    inline
{##}{##}    font-bold uppercase text-xl
{##}{##}"
    >{{ str }}</p>    
{%- endmacro %}

{% macro _make_title_case(str, classes) -%}
    {% set has_handled_first_char = false %}
    {% for c in str -%}
        {{- c if has_handled_first_char else _make_capital_case(c) -}}
        {% set has_handled_first_char = true %}
    {%- endfor %}
{%- endmacro%}

{% macro _make_not_sentence(sentence) -%}
    {{ _make_capital_case("not" )}} {{ sentence }}
{%- endmacro %}

{% set _core_term_descriptions = {
        "simplistic": {
                "description": "No crazy tech burden. You need only a few concept to kickstart."
        }
    ,   "integrated": {
                "description": "Integrate all integrated into a single file."
        }
    ,   "templated": {
                "description": "Html with nunjucks template gives out a JSX-like experience."
        }
    ,   "componentized": {
                "description": "Write and reuse your own component files.."
        }
    ,   "oriented": {
                "description": "Data flows from parent to children, like react.js."
        }
    ,   "makeless": {
                "description": "No config. No build step. Just write html template and deploy!!"
        }
} %}

{% set _not_descriptions = [
        "a framework. It is merely an approach on utilizing popular libraries to build sites."
    ,   "a compiled language. What you write is what you will serve and see in your browser."
    ,   "a server-reliant app. You need not set up your own API for running the app."
    ,   "about javascript. Declarative and templated HTML document is all you need."
    ,   "type-safe probably. All templates are interpreted in runtime."
] %}
